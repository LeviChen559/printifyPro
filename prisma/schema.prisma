generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL_pgbouncer")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model activities {
  id         Int      @id @unique @default(autoincrement()) @db.SmallInt
  label_code String   @db.VarChar
  event      String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamptz(6)
  username   String   @db.VarChar
  role       String   @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mylabels {
  id                 Int     @id @unique @default(autoincrement()) @db.SmallInt
  logo               String
  item_code          String
  lot_number         String?
  label_temp         String
  product_name_en    String
  product_name_zh    String
  weight             String
  case_quantity      Int     @db.SmallInt
  case_unit          String
  storage            String
  shelf_life         String?
  case_gtin          String?
  ingredient         String
  allergen           String
  manufactured       String
  barcode            String
  customer_item_code String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         Int        @id @unique @default(autoincrement()) @db.SmallInt
  email      String     @db.VarChar
  name       String     @db.VarChar
  password   String     @db.VarChar
  role       users_role
  created_at DateTime   @db.Date
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model labelstyle {
  id              Int  @id(map: "labelstyle_pkey1") @unique(map: "labelstyle_id_key1") @db.SmallInt
  item_code       Json
  lot_number      Json
  product_name_en Json
  product_name_zh Json
  weight          Json
  case_quantity   Json
  case_unit       Json
  storage         Json
  best_before     Json
  ingredient      Json
  allergen        Json
  manufactured    Json
  shelf_life      Json
}

enum mylabels_case_unit {
  tray
  bag
  piece
  container
  bottle
}

enum mylabels_weight_unit {
  g_tray    @map("g/tray")
  g_bag     @map("g/bag")
  pcs_tray  @map("pcs/tray")
  container
  g_piece   @map("g/piece")
}

enum users_role {
  admin
  user
  manager
}
